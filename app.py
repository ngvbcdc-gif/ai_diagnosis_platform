import streamlit as st

st.set_page_config(page_title="ุงูุทุจูุจ ุงูุงูุชุฑุงุถู", layout="centered")

# ุฃุณููุจ CSS ุจุณูุท ูุฌุนู ุงูุนูุงุตุฑ ุฃูุจุฑ ููุฑูุญุฉ ููุนุฑุถ ุนูู ุงูุฌูุงู
st.markdown("""
<style>
/* ุชูุจูุฑ ุงูุฎุทูุท ูุงูุฃุฒุฑุงุฑ */
h1, h2, h3 {
    font-family: 'Arial', sans-serif;
    text-align: center;
}
div[data-baseweb="select"] > div > div > input {
    font-size: 18px;
    padding: 12px;
}
.stButton>button {
    font-size: 18px;
    padding: 12px 20px;
    width: 100%;
    border-radius: 10px;
}
.stMultiselect > div > div {
    font-size: 18px;
}
</style>
""", unsafe_allow_html=True)

st.title("๐จโโ๏ธ ุงูุทุจูุจ ุงูุงูุชุฑุงุถู")

# ูุงุนุฏุฉ ุจูุงูุงุช ุงูุฃูุฑุงุถ ูุงูุฃุนุฑุงุถ ูุงููุตุงุฆุญ
diseases_db = {
    "ูุฒูุฉ ุจุฑุฏ": {
        "ุงูุฃุนุฑุงุถ": ["ุณุนุงู", "ุงุญุชูุงู ุฃูู", "ุญูุฉ ูู ุงูุญูู", "ุนุทุณ"],
        "ูุตูุญุฉ ุงูุนูุงุฌ": "ุงูุฑุงุญุฉุ ุดุฑุจ ุณูุงุฆู ุฏุงูุฆุฉุ ููุณููุงุช ุงูุฃูู ูุซู ุงูุจุงุฑุงุณูุชุงููู."
    },
    "ุงูุฃูููููุฒุง": {
        "ุงูุฃุนุฑุงุถ": ["ุญูู", "ุณุนุงู ุฌุงู", "ุขูุงู ูู ุงูุนุถูุงุช", "ุฅุฑูุงู"],
        "ูุตูุญุฉ ุงูุนูุงุฌ": "ุงูุฑุงุญุฉุ ุดุฑุจ ุงูุณูุงุฆูุ ูููู ุงุณุชุฎุฏุงู ูุถุงุฏุงุช ุงูููุฑูุณุงุช ุจุนุฏ ุงุณุชุดุงุฑุฉ ุงูุทุจูุจ."
    },
    "ุงูุชูุงุจ ุงูุญูู": {
        "ุงูุฃุนุฑุงุถ": ["ุฃูู ูู ุงูุญูู", "ุตุนูุจุฉ ูู ุงูุจูุน", "ุงุญูุฑุงุฑ"],
        "ูุตูุญุฉ ุงูุนูุงุฌ": "ุบุฑุบุฑุฉ ุจุงููุงุก ุงููุงูุญุ ูุณููุงุช ุงูุฃููุ ูุฒูุงุฑุฉ ุงูุทุจูุจ ุฅุฐุง ุงุณุชูุฑ ุงูุฃูู."
    },
    "ุงูุชูุงุจ ุงููุนุฏุฉ": {
        "ุงูุฃุนุฑุงุถ": ["ุฃูู ูู ุงูุจุทู", "ุบุซูุงู", "ุชููุค", "ููุฏุงู ุงูุดููุฉ"],
        "ูุตูุญุฉ ุงูุนูุงุฌ": "ุชูุงูู ุฃุฏููุฉ ูุถุงุฏุฉ ููุญููุถุฉุ ุชุฌูุจ ุงูุฃุทุนูุฉ ุงูุญุงุฑุฉ ูุงูุฏูููุฉ."
    }
}

st.header("ุฃุฏุฎู ุงูุฃุนุฑุงุถ ุงูุชู ุชุดุนุฑ ุจูุง:")

symptoms_input = st.multiselect(
    "ุงุฎุชุฑ ุฃุนุฑุงุถู:",
    options=[
        "ุณุนุงู", "ุงุญุชูุงู ุฃูู", "ุญูุฉ ูู ุงูุญูู", "ุนุทุณ",
        "ุญูู", "ุณุนุงู ุฌุงู", "ุขูุงู ูู ุงูุนุถูุงุช", "ุฅุฑูุงู",
        "ุฃูู ูู ุงูุญูู", "ุตุนูุจุฉ ูู ุงูุจูุน", "ุงุญูุฑุงุฑ",
        "ุฃูู ูู ุงูุจุทู", "ุบุซูุงู", "ุชููุค", "ููุฏุงู ุงูุดููุฉ"
    ]
)

if st.button("ุชุดุฎูุต ุงููุฑุถ"):
    if not symptoms_input:
        st.warning("ุงูุฑุฌุงุก ุงุฎุชูุงุฑ ุนุฑุถ ูุงุญุฏ ุนูู ุงูุฃูู!")
    else:
        matched_diseases = []
        for disease, info in diseases_db.items():
            matched_symptoms = set(symptoms_input).intersection(set(info["ุงูุฃุนุฑุงุถ"]))
            if matched_symptoms:
                matched_diseases.append((disease, len(matched_symptoms), info["ูุตูุญุฉ ุงูุนูุงุฌ"]))

        if matched_diseases:
            matched_diseases.sort(key=lambda x: x[1], reverse=True)
            st.success("ุงูุชุดุฎูุต ุงููุญุชูู:")
            for disease, count, advice in matched_diseases:
                st.markdown(f"### {disease}")
                st.write(f"ุนุฏุฏ ุงูุฃุนุฑุงุถ ุงููุทุงุจูุฉ: {count}")
                st.info(f"ูุตูุญุฉ ุงูุนูุงุฌ: {advice}")
        else:
            st.error("ูู ูุชู ุงูุนุซูุฑ ุนูู ูุฑุถ ูุชุทุงุจู ูุน ุงูุฃุนุฑุงุถ ุงููุฏุฎูุฉ.")
